split_cat <- c(4, -1, -1, 1, -1)
surPar <- getSurrogates(cat_direction = cat_direction2,
ncat = as.integer(ncat2),
wt = as.numeric(wt),
X = as.matrix(testdata),
controls = as.integer(unlist(controls)),
node = as.numeric(node),
var = as.integer(var),
split = as.numeric(split))
surPar
dyn.load("cat1.so")
getSurrogates <- function(cat_direction, ncat, wt, X, controls, node, var, split) {
.Call("getSurrogates",cat_direction, ncat, wt, X, controls, node, var, split)
}
maxsur <- 10
sur_agree <- 0
wt <- rep(c(1), 100)
ncat2 <- c(4, 4, 4, rep(0L, 17))
cat_direction2 <- c(4L, -1L, -1L, 1L, -1L)
controls <- c(maxsur, sur_agree)
node <- c(2)
# new stuff
var <- c(1)
split <- c(0.98)
split_cat <- c(4, -1, -1, 1, -1)
surPar <- getSurrogates(cat_direction = cat_direction2,
ncat = as.integer(ncat2),
wt = as.numeric(wt),
X = as.matrix(testdata),
controls = as.integer(unlist(controls)),
node = as.numeric(node),
var = as.integer(var),
split = as.numeric(split_cat))
surPar
dyn.load("cat1.so")
getSurrogates <- function(cat_direction, ncat, wt, X, controls, node, var, split) {
.Call("getSurrogates",cat_direction, ncat, wt, X, controls, node, var, split)
}
maxsur <- 10
sur_agree <- 0
wt <- rep(c(1), 100)
ncat2 <- c(4, 4, 4, rep(0L, 17))
cat_direction2 <- c(4L, -1L, -1L, 1L, -1L)
controls <- c(maxsur, sur_agree)
node <- c(2)
# new stuff
var <- c(1)
split <- c(0.98)
split_cat <- c(4, -1, -1, 1, -1)
surPar <- getSurrogates(cat_direction = cat_direction2,
ncat = as.integer(ncat2),
wt = as.numeric(wt),
X = as.matrix(testdata),
controls = as.integer(unlist(controls)),
node = as.numeric(node),
var = as.integer(var),
split = as.numeric(split_cat))
surPar
dyn.load("cat1.so")
getSurrogates <- function(cat_direction, ncat, wt, X, controls, node, var, split) {
.Call("getSurrogates",cat_direction, ncat, wt, X, controls, node, var, split)
}
maxsur <- 10
sur_agree <- 0
wt <- rep(c(1), 100)
ncat2 <- c(4, 4, 4, rep(0L, 17))
cat_direction2 <- c(4L, -1L, -1L, 1L, -1L)
controls <- c(maxsur, sur_agree)
node <- c(2, 0.98)
# new stuff
var <- c(1)
split <- c(0.98)
split_cat <- c(4, -1, -1, 1, -1)
surPar <- getSurrogates(cat_direction = cat_direction2,
ncat = as.integer(ncat2),
wt = as.numeric(wt),
X = as.matrix(testdata),
controls = as.integer(unlist(controls)),
node = as.numeric(node),
var = as.integer(var),
split = as.numeric(split_cat))
surPar
dyn.load("cat1.so")
getSurrogates <- function(cat_direction, ncat, wt, X, controls, node, var, split) {
.Call("getSurrogates",cat_direction, ncat, wt, X, controls, node, var, split)
}
maxsur <- 10
sur_agree <- 0
wt <- rep(c(1), 100)
ncat2 <- c(4, 4, 4, rep(0L, 17))
cat_direction2 <- c(4L, -1L, -1L, 1L, -1L)
controls <- c(maxsur, sur_agree)
node <- c(2, 0.98)
# new stuff
var <- c(5)
split <- c(0.98)
split_cat <- c(4, -1, -1, 1, -1)
surPar <- getSurrogates(cat_direction = cat_direction2,
ncat = as.integer(ncat2),
wt = as.numeric(wt),
X = as.matrix(testdata),
controls = as.integer(unlist(controls)),
node = as.numeric(node),
var = as.integer(var),
split = as.numeric(split_cat))
surPar
dyn.load("cat1.so")
getSurrogates <- function(cat_direction, ncat, wt, X, controls, node, var, split) {
.Call("getSurrogates",cat_direction, ncat, wt, X, controls, node, var, split)
}
maxsur <- 10
sur_agree <- 0
wt <- rep(c(1), 100)
ncat2 <- c(4, 4, 4, rep(0L, 17))
cat_direction2 <- c(4L, -1L, -1L, 1L, -1L)
controls <- c(maxsur, sur_agree)
node <- c(2, 0.98)
# new stuff
var <- c(8)
split <- c(0.98)
split_cat <- c(4, -1, -1, 1, -1)
surPar <- getSurrogates(cat_direction = cat_direction2,
ncat = as.integer(ncat2),
wt = as.numeric(wt),
X = as.matrix(testdata),
controls = as.integer(unlist(controls)),
node = as.numeric(node),
var = as.integer(var),
split = as.numeric(split_cat))
surPar
dyn.load("cat1.so")
getSurrogates <- function(cat_direction, ncat, wt, X, controls, node, var, split) {
.Call("getSurrogates",cat_direction, ncat, wt, X, controls, node, var, split)
}
maxsur <- 10
sur_agree <- 0
wt <- rep(c(1), 100)
ncat2 <- c(4, 4, 4, rep(0L, 17))
cat_direction2 <- c(4L, -1L, -1L, 1L, -1L)
controls <- c(maxsur, sur_agree)
node <- c(2, 0.98)
# new stuff
var <- c(8)
split <- c(0.98)
split_cat <- c(4, -1, -1, 1, -1)
surPar <- getSurrogates(cat_direction = cat_direction2,
ncat = as.integer(ncat2),
wt = as.numeric(wt),
X = as.matrix(testdata),
controls = as.integer(unlist(controls)),
node = as.numeric(node),
var = as.integer(var),
split = as.numeric(split_cat))
surPar
dyn.load("cat1.so")
getSurrogates <- function(cat_direction, ncat, wt, X, controls, node, var, split) {
.Call("getSurrogates",cat_direction, ncat, wt, X, controls, node, var, split)
}
maxsur <- 10
sur_agree <- 0
wt <- rep(c(1), 100)
ncat2 <- c(4, 4, 4, rep(0L, 17))
cat_direction2 <- c(4L, -1L, -1L, 1L, -1L)
controls <- c(maxsur, sur_agree)
node <- c(2, 0.98)
# new stuff
var <- c(8)
split <- c(0.98)
split_cat <- c(4, -1, -1, 1, -1)
surPar <- getSurrogates(cat_direction = cat_direction2,
ncat = as.integer(ncat2),
wt = as.numeric(wt),
X = as.matrix(testdata),
controls = as.integer(unlist(controls)),
node = as.numeric(node),
var = as.integer(var),
split = as.numeric(split))
surPar
dyn.load("cat1.so")
getSurrogates <- function(cat_direction, ncat, wt, X, controls, node, var, split) {
.Call("getSurrogates",cat_direction, ncat, wt, X, controls, node, var, split)
}
maxsur <- 10
sur_agree <- 0
wt <- rep(c(1), 100)
ncat2 <- c(4, 4, 4, rep(0L, 17))
cat_direction2 <- c(4L, -1L, -1L, 1L, -1L)
controls <- c(maxsur, sur_agree)
node <- c(2, 0.98)
# new stuff
var <- c(8)
split <- c(0.98)
split_cat <- c(4, -1, -1, 1, -1)
surPar <- getSurrogates(cat_direction = cat_direction2,
ncat = as.integer(ncat2),
wt = as.numeric(wt),
X = as.matrix(testdata),
controls = as.integer(unlist(controls)),
node = as.numeric(node),
var = as.integer(var),
split = as.numeric(split))
surPar
dyn.load("cat1.so")
getSurrogates <- function(cat_direction, ncat, wt, X, controls, node, var, split) {
.Call("getSurrogates",cat_direction, ncat, wt, X, controls, node, var, split)
}
maxsur <- 10
sur_agree <- 0
wt <- rep(c(1), 100)
ncat2 <- c(4, 4, 4, rep(0L, 17))
cat_direction2 <- c(4L, -1L, -1L, 1L, -1L)
controls <- c(maxsur, sur_agree)
node <- c(2, 0.98)
# new stuff
var <- c(8)
split <- c(0.98)
split_cat <- c(4, -1, -1, 1, -1)
surPar <- getSurrogates(cat_direction = cat_direction2,
ncat = as.integer(ncat2),
wt = as.numeric(wt),
X = as.matrix(testdata),
controls = as.integer(unlist(controls)),
node = as.numeric(node),
var = as.integer(var),
split = as.numeric(split))
surPar
var <- c(1)
split_cat <- c(4, -1, -1, 1, -1)
surPar <- getSurrogates(cat_direction = cat_direction2,
ncat = as.integer(ncat2),
wt = as.numeric(wt),
X = as.matrix(testdata),
controls = as.integer(unlist(controls)),
node = as.numeric(node),
var = as.integer(var),
split = as.numeric(split_cat))
surPar
var <- c(8)
split <- c(0.98)
surPar <- getSurrogates(cat_direction = cat_direction2,
ncat = as.integer(ncat2),
wt = as.numeric(wt),
X = as.matrix(testdata),
controls = as.integer(unlist(controls)),
node = as.numeric(node),
var = as.integer(var),
split = as.numeric(split))
surPar
var <- c(8)
split <- c(0.98)
surPar <- getSurrogates(cat_direction = cat_direction2,
ncat = as.integer(ncat2),
wt = as.numeric(wt),
X = as.matrix(testdata),
controls = as.integer(unlist(controls)),
node = as.numeric(node),
var = as.integer(var),
split = as.numeric(split))
surPar
dyn.load("cat1.so")
var <- c(8)
split <- c(0.98)
surPar <- getSurrogates(cat_direction = cat_direction2,
ncat = as.integer(ncat2),
wt = as.numeric(wt),
X = as.matrix(testdata),
controls = as.integer(unlist(controls)),
node = as.numeric(node),
var = as.integer(var),
split = as.numeric(split))
surPar
var <- c(1)
split_cat <- c(4, -1, -1, 1, -1)
surPar <- getSurrogates(cat_direction = cat_direction2,
ncat = as.integer(ncat2),
wt = as.numeric(wt),
X = as.matrix(testdata),
controls = as.integer(unlist(controls)),
node = as.numeric(node),
var = as.integer(var),
split = as.numeric(split_cat))
surPar
.Call("getSurrogates",cat_direction, ncat, wt, X, controls, var, split)
dyn.load("cat1.so")
getSurrogates <- function(cat_direction, ncat, wt, X, controls, var, split) {
.Call("getSurrogates",cat_direction, ncat, wt, X, controls, var, split)
}
dyn.load("cat1.so")
var <- c(8)
split <- c(0.98)
surPar <- getSurrogates(cat_direction = cat_direction2,
ncat = as.integer(ncat2),
wt = as.numeric(wt),
X = as.matrix(testdata),
controls = as.integer(unlist(controls)),
node = as.numeric(node),
var = as.integer(var),
split = as.numeric(split))
surPar
dyn.load("cat1.so")
var <- c(8)
split <- c(0.98)
surPar <- getSurrogates(cat_direction = cat_direction2,
ncat = as.integer(ncat2),
wt = as.numeric(wt),
X = as.matrix(testdata),
controls = as.integer(unlist(controls)),
var = as.integer(var),
split = as.numeric(split))
surPar
dyn.load("cat1.so")
var <- c(8)
split <- c(0.98)
surPar <- getSurrogates(cat_direction = cat_direction2,
ncat = as.integer(ncat2),
wt = as.numeric(wt),
X = as.matrix(testdata),
controls = as.integer(unlist(controls)),
var = as.integer(var),
split = as.numeric(split))
surPar
dyn.load("cat1.so")
var <- c(1)
split_cat <- c(4, -1, -1, 1, -1)
surPar <- getSurrogates(cat_direction = cat_direction2,
ncat = as.integer(ncat2),
wt = as.numeric(wt),
X = as.matrix(testdata),
controls = as.integer(unlist(controls)),
var = as.integer(var),
split = as.numeric(split_cat))
surPar
dyn.load("cat1.so")
getSurrogates <- function(ncat, wt, X, controls, var, split) {
.Call("getSurrogates",ncat, wt, X, controls, var, split)
}
dyn.load("cat1.so")
var <- c(8)
split <- c(0.98)
surPar <- getSurrogates(ncat = as.integer(ncat2),
wt = as.numeric(wt),
X = as.matrix(testdata),
controls = as.integer(unlist(controls)),
var = as.integer(var),
split = as.numeric(split))
surPar
dyn.load("cat1.so")
var <- c(1)
split_cat <- c(4, -1, -1, 1, -1)
surPar <- getSurrogates(ncat = as.integer(ncat2),
wt = as.numeric(wt),
X = as.matrix(testdata),
controls = as.integer(unlist(controls)),
var = as.integer(var),
split = as.numeric(split_cat))
surPar
dyn.load("cat1.so")
getSurrogates <- function(ncat, wt, X, controls, var, split) {
.Call("getSurrogates",ncat, wt, X, controls, var, split)
}
dyn.load("cat1.so")
var <- c(8)
split <- c(0.98)
surPar <- getSurrogates(wt = as.numeric(wt),
X = as.matrix(testdata),
controls = as.integer(unlist(controls)),
var = as.integer(var),
split = as.numeric(split),
ncat = as.integer(ncat2))
surPar
dyn.load("cat1.so")
getSurrogates <- function(wt, X, controls, var, split, ncat) {
.Call("getSurrogates", wt, X, controls, var, split, ncat)
}
dyn.load("cat1.so")
var <- c(8)
split <- c(0.98)
surPar <- getSurrogates(wt = as.numeric(wt),
X = as.matrix(testdata),
controls = as.integer(unlist(controls)),
var = as.integer(var),
split = as.numeric(split),
ncat = as.integer(ncat2))
surPar
dyn.load("cat1.so")
var <- c(1)
split_cat <- c(4, -1, -1, 1, -1)
surPar <- getSurrogates(wt = as.numeric(wt),
X = as.matrix(testdata),
controls = as.integer(unlist(controls)),
var = as.integer(var),
split = as.numeric(split_cat),
ncat = as.integer(ncat2))
surPar
dyn.load("cat1.so")
var <- c(8)
split <- c(0.98)
surPar <- getSurrogates(wt = as.numeric(wt),
X = as.matrix(testdata),
controls = as.integer(unlist(controls)),
var = as.integer(var),
split = as.numeric(split),
ncat = as.integer(ncat2))
surPar
dyn.load("cat1.so")
var <- c(1)
split_cat <- c(4, -1, -1, 1, -1)
surPar <- getSurrogates(wt = as.numeric(wt),
X = as.matrix(testdata),
controls = as.integer(unlist(controls)),
var = as.integer(var),
split = as.numeric(split_cat),
ncat = as.integer(ncat2))
surPar
dyn.load("cat1.so")
var <- c(8)
split <- c(0.98)
surPar <- getSurrogates(wt = as.numeric(wt),
X = as.matrix(testdata),
controls = as.integer(unlist(controls)),
var = as.integer(var),
split = as.numeric(split),
ncat = as.integer(ncat2))
surPar
dyn.load("cat1.so")
var <- c(1)
split_cat <- c(4, -1, -1, 1, -1)
surPar <- getSurrogates(wt = as.numeric(wt),
X = as.matrix(testdata),
controls = as.integer(unlist(controls)),
var = as.integer(var),
split = as.numeric(split_cat),
ncat = as.integer(ncat2))
surPar
dyn.load("cat1.so")
var <- c(8)
split <- c(0.98)
surPar <- getSurrogates(wt = as.numeric(wt),
X = as.matrix(testdata),
controls = as.integer(unlist(controls)),
var = as.integer(var),
split = as.numeric(split),
ncat = as.integer(ncat2))
surPar
for(i in 0:10000) {
surPar <- getSurrogates(wt = as.numeric(wt),
X = as.matrix(testdata),
controls = as.integer(unlist(controls)),
var = as.integer(var),
split = as.numeric(split),
ncat = as.integer(ncat2))
}
for (i in 0:10000){
surPar <- getSurrogates(wt = as.numeric(wt),
X = as.matrix(testdata),
controls = as.integer(unlist(controls)),
var = as.integer(var),
split = as.numeric(split_cat),
ncat = as.integer(ncat2))
}
for (i in 0:1000000){
surPar <- getSurrogates(wt = as.numeric(wt),
X = as.matrix(testdata),
controls = as.integer(unlist(controls)),
var = as.integer(var),
split = as.numeric(split_cat),
ncat = as.integer(ncat2))
}
surPar
dyn.load("cat1.so")
var <- c(1)
split_cat <- c(4, -1, -1, 1, -1)
surPar <- getSurrogates(wt = as.numeric(wt),
X = as.matrix(testdata),
controls = as.integer(unlist(controls)),
var = as.integer(var),
split = as.numeric(split_cat),
ncat = as.integer(ncat2))
surPar
for (i in 0:10000){
surPar <- getSurrogates(wt = as.numeric(wt),
X = as.matrix(testdata),
controls = as.integer(unlist(controls)),
var = as.integer(var),
split = as.numeric(split_cat),
ncat = as.integer(ncat2))
}
surPar
for (i in 0:100000){
surPar <- getSurrogates(wt = as.numeric(wt),
X = as.matrix(testdata),
controls = as.integer(unlist(controls)),
var = as.integer(var),
split = as.numeric(split_cat),
ncat = as.integer(ncat2))
}
surPar
install_github("StephanSeifert/SurrogateMinimalDepth", ref = "SMD_0.2.1")
pacman::p_load(devtools, SurrogateMinimalDepth)
data("SMD_example_data")
dim(SMD_example_data)
head(SMD_example_data[, 1:5])
set.seed(42)
res.smd = var.select.smd(x = SMD_example_data[,2:ncol(SMD_example_data)], y = SMD_example_data[,1], s= 1, ntree = 10)
install_github("StephanSeifert/SurrogateMinimalDepth", ref = "SMD_0.2.1")
pacman::p_load(devtools, SurrogateMinimalDepth)
data("SMD_example_data")
dim(SMD_example_data)
head(SMD_example_data[, 1:5])
set.seed(42)
res.smd = var.select.smd(x = SMD_example_data[,2:ncol(SMD_example_data)], y = SMD_example_data[,1], s= 1, ntree = 10)
install_github("StephanSeifert/SurrogateMinimalDepth", ref = "SMD_0.2.1")
